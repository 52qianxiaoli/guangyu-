void LNRS_dp_hash(char * arr, int size)

      {

      memset(visit, -1, sizeof visit);

      memset(dp, 0, sizeof dp);

      maxlen = maxindex = 0;

      dp[0] = 1;

      visit[arr[0]] = 0;

      int last_start = 0;

      for(int i = 1; i < size; ++i)

      {

      if(visit[arr[i]] == -1)

      {

      dp[i] = dp[i-1] + 1;

      visit[arr[i]] = i; /* 记录字符下标 */

      }else

      {

      if(last_start <= visit[arr[i]])

      {

      dp[i] = i - visit[arr[i]];

      last_start = visit[arr[i]] + 1;

      visit[arr[i]] = i; /* 更新最近重复位置 */

      }else

      {

      dp[i] = dp[i-1] + 1;

      visit[arr[i]] = i; /* 更新最近重复位置 */

      }

      }

      if(dp[i] > maxlen)

      {

      maxlen = dp[i];

      maxindex = i + 1 - maxlen;

      }

      }

      output(arr);

      }
